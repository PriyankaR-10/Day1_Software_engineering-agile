package com.torryharris.mainpack;
import java.util.*;

public class Main
{
    public static void main(String[] args)
    {
        //it's a doubly linked list, duplicates are allowed
        //Each node holds data and also a link(address) that points to next node in the list
        //operations like insertion n deletion are inexpensive compared to ArrayList
        //Iterators : ListIterator,Iterators can be used for traversing list
        //nodes can be added/removed in beg,end,between
	    List<String> l1 = new LinkedList<String>();
        l1.add("Grapes");
        l1.add("Apple");
        l1.add("pomegrante");
        System.out.println("Is Empty? "+l1.isEmpty());
        System.out.println("Contains grapes? "+l1.contains("Grapes"));
        //Listiterator can traverse in both forward n backward direction
        ListIterator<String> it = l1.listIterator();
        System.out.println("In forward direction ");
        while(it.hasNext())
        {
            System.out.print(it.next()+" ");
        }
        System.out.println();
        System.out.println("In backward direction ");
        while(it.hasPrevious())
        {
            System.out.print(it.previous()+" ");
        }
        System.out.println("\nCollection Reverse");
        Collections.reverse(l1);
        System.out.print(l1+" ");
        //To sort
        System.out.println("\nCollection Sort");
        Collections.sort(l1);
        System.out.print(l1+" ");
        //To shuffle
        System.out.println("\nCollection Shuffle");
        Collections.shuffle(l1);
        System.out.print(l1+" ");

    }
}
