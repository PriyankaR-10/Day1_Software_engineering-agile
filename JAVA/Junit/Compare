package com.torryharris.mainpack;
import com.torryharris.spack.Student;

import java.util.*;
public class Main
{
    public static void main(String[] args)
    {
        ArrayList<Student> slist = new ArrayList<Student>();
        slist.add(new Student(10,"priya",75));
        slist.add(new Student(22,"Sneha",80));
        slist.add(new Student(3,"nivi",65));
        slist.add(new Student(49,"dolly",95));
        slist.add(new Student(73,"daya",95));
        System.out.println("Students list before sorting");
        for(Student s:slist)
        {
            System.out.println(s);
        }
        Collections.sort(slist);//works on principle of quicksort
        System.out.println("\nStudents list after sorting");
        for(Student s:slist)
        {
            System.out.println(s);
        }
    }
}------------------------------------------------------------------------
package com.torryharris.spack;
public class Student implements Comparable<Student>
{
    private int id;
    private String name;
    private int marks;

    public Student(int id, String name, int marks)
    {
        this.id = id;
        this.name = name;
        this.marks = marks;
    }

    @Override
    public String toString()
    {
        return "Student{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", marks=" + marks +
                '}';
    }
    //s1.compareTo(s2)[Natural ordering-ascending order]
    @Override
    public int compareTo(Student s)
    {
        if(marks>s.marks)
            return 1;
        else if(marks == s.marks)
        {
            return 0;
        }
        else
            return -1;
    }
//for descending order
    /*public int compareTo(Student s)
    {
        if(marks<s.marks)
            return 1;
        else if(marks == s.marks)
            return 0;
        else
            return -1;
    }*/
}
